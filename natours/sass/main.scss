/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Reset */

$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
	/* one rem is 10px */
	font-size: 62.5%;
}

/* Inherited by all elements */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;

	box-sizing: border-box;
}

.header {
    /* 95% of viewport height */
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.801),
        rgba($color-primary-dark, 0.801)),
        url("../img/hero.jpg");
    /* follow width of viewport/element */
    background-size: cover;
    /* top stays the same, bottom changes */
    background-position: top;
    position: relative;

    /* specifies polygon in which the el is still visible */
    /* 0 0 in the top left, 100 0 in the top right */
    /* 100 in the bottom right, 200px on the y axis */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }
    &__logo {
        height: 3.5rem;
    }
    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
} 

.heading-primary {
    color: $color-white;
    text-transform: uppercase; 

    /* determines if back part of an element
    is visible when you transform it 
    removes - shakiness - bug */
    backface-visibility: hidden;

    margin-bottom: 6rem;

    &--main {
        display: block;
        font-size: 60px;
        font-weight: 400;
        letter-spacing: 3.5rem;
    
        animation-name: moveInLeft;
        animation-duration: 1.5s;
    
        /* Other animation functions */
        /* Starts faster and then is slower at the end */
    /*   
        animation-timing-function: ease-out;
        animation-delay: 3s;
    */
        /* happens 3 times */
    /*  animation-iteration-count: 3; */
        
    }
    
    &--sub {
        display: block;
        font-size: 20px;
        font-weight: 700;
        letter-spacing: 1.75rem;
    
        animation: moveInRight 1.5s ease-out;
    }
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        /* goes backward in the x direction */
        transform: translateX(-10rem);
    }

    80% {
        /* intermediate position slightly to the right */
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        /* goes forward in the x direction */
        transform: translateX(10rem);
    }

    80% {
        /* intermediate position slightly to the right */
        transform: translateX(-10rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInButton {
    0% {
        opacity: 0;
        /* goes forward in the x direction */
        transform: translateY(4rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn {
    /* link pseduo-class is a special state when a link is visited */
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        /* block model works on the element */
        /* it's inline-block so you can treat it like it's text */
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: 1.5rem;
    }
    
    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 10rem 2rem rgba($color-black, .2);

        /* after pseudo element after the hover */
        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            /* opacity 0 to fade something out */
            opacity: 0;
        }
    }
    
    &:active {
        transform: translateY(-1px);
        box-shadow: 0 5px 1rem rgba($color-black, .2);
    }
    
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;
        &::after {
            background-color: $color-white;
        }
    }
    
    /* appears behind the button */
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }
    
    &--animated {
        /* last field is .75s delay */
        animation: moveInButton .5s ease-out .75s;
    
        /* automatically applies styles to 0 before animation starts */
        animation-fill-mode: backwards;
    }    
}